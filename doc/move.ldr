summary: a partial structural assignment statement
format: [26:6:0] >> - "MOVE" - #1 - Atomic -5 "TO" -2 Identifier - ^7 - >< &1 \ "HIGH-VALUES" - &1 \2 "LOW-VALUES" -2 &1 \3 "SPACES" -3 /3
remarks: <ul>
	* for numeric fields (defined with picture clauses without <code>A</code> nor <code>X</code>), BabyCobol's <code>MOVE SPACES</code> behaves like COBOL's <code>MOVE ZEROES</code>
	* if the first argument is an identifier, BabyCobol's <code>MOVE</code> behaves like COBOL's <code>MOVE CORRESPONDING</code>
	* if the first argument is a figurative value, it can lead to assigning vastly different values to second arguments depending on their individual types
	* the first argument is evaluated once, before any assignments take place; all other arguments are evaluated in order, taking into account previous assignments
</ul>
